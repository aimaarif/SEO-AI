services:
  # Web service for the Express backend and React frontend
  - type: web
    name: fullstack-app
    env: node
    buildCommand: npm ci --include=dev && npm run build
    startCommand: npm start
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 10000
      - key: DATABASE_URL
        fromDatabase:
          name: app-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: app-redis
          property: connectionString
      - key: REDIS_DB
        value: "0"

  # Background worker for automation tasks
  - type: worker
    name: automation-worker
    env: node
    buildCommand: npm ci --include=dev && npm run build
    startCommand: npm run worker:start
    envVars:
      - key: NODE_ENV
        value: production
      - key: DATABASE_URL
        fromDatabase:
          name: app-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: app-redis
          property: connectionString
      - key: REDIS_DB
        value: "0"

  # Queue monitor service
  - type: worker
    name: queue-monitor
    env: node
    buildCommand: npm ci --include=dev && npm run build
    startCommand: npm run queue:monitor
    envVars:
      - key: NODE_ENV
        value: production
      - key: DATABASE_URL
        fromDatabase:
          name: app-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: app-redis
          property: connectionString
      - key: REDIS_DB
        value: "0"

  # Scheduler service
  - type: worker
    name: scheduler
    env: node
    buildCommand: npm ci --include=dev && npm run build
    startCommand: npm run scheduler:start
    envVars:
      - key: NODE_ENV
        value: production
      - key: DATABASE_URL
        fromDatabase:
          name: app-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: app-redis
          property: connectionString
      - key: REDIS_DB
        value: "0"

  # Redis instance for queue management
  - type: redis
    name: app-redis
    plan: free
    ipAllowList: []
